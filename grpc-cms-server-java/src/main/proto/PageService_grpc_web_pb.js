/**
 * @fileoverview gRPC-Web generated client stub for pageservice
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: PageService.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.pageservice = require('./PageService_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pageservice.GrpcCmsServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.pageservice.GrpcCmsServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pageservice.PageRequest,
 *   !proto.pageservice.PageResponse>}
 */
const methodDescriptor_GrpcCmsService_createPage = new grpc.web.MethodDescriptor(
  '/pageservice.GrpcCmsService/createPage',
  grpc.web.MethodType.UNARY,
  proto.pageservice.PageRequest,
  proto.pageservice.PageResponse,
  /**
   * @param {!proto.pageservice.PageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pageservice.PageResponse.deserializeBinary
);


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pageservice.PageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pageservice.PageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pageservice.GrpcCmsServiceClient.prototype.createPage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pageservice.GrpcCmsService/createPage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_createPage,
      callback);
};


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pageservice.PageResponse>}
 *     Promise that resolves to the response
 */
proto.pageservice.GrpcCmsServicePromiseClient.prototype.createPage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pageservice.GrpcCmsService/createPage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_createPage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pageservice.PageRequest,
 *   !proto.pageservice.PageResponse>}
 */
const methodDescriptor_GrpcCmsService_updatePage = new grpc.web.MethodDescriptor(
  '/pageservice.GrpcCmsService/updatePage',
  grpc.web.MethodType.UNARY,
  proto.pageservice.PageRequest,
  proto.pageservice.PageResponse,
  /**
   * @param {!proto.pageservice.PageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pageservice.PageResponse.deserializeBinary
);


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pageservice.PageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pageservice.PageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pageservice.GrpcCmsServiceClient.prototype.updatePage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pageservice.GrpcCmsService/updatePage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_updatePage,
      callback);
};


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pageservice.PageResponse>}
 *     Promise that resolves to the response
 */
proto.pageservice.GrpcCmsServicePromiseClient.prototype.updatePage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pageservice.GrpcCmsService/updatePage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_updatePage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pageservice.PageRequest,
 *   !proto.pageservice.PageResponse>}
 */
const methodDescriptor_GrpcCmsService_deletePage = new grpc.web.MethodDescriptor(
  '/pageservice.GrpcCmsService/deletePage',
  grpc.web.MethodType.UNARY,
  proto.pageservice.PageRequest,
  proto.pageservice.PageResponse,
  /**
   * @param {!proto.pageservice.PageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pageservice.PageResponse.deserializeBinary
);


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pageservice.PageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pageservice.PageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pageservice.GrpcCmsServiceClient.prototype.deletePage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pageservice.GrpcCmsService/deletePage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_deletePage,
      callback);
};


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pageservice.PageResponse>}
 *     Promise that resolves to the response
 */
proto.pageservice.GrpcCmsServicePromiseClient.prototype.deletePage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pageservice.GrpcCmsService/deletePage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_deletePage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pageservice.PageRequest,
 *   !proto.pageservice.PageResponse>}
 */
const methodDescriptor_GrpcCmsService_getPage = new grpc.web.MethodDescriptor(
  '/pageservice.GrpcCmsService/getPage',
  grpc.web.MethodType.UNARY,
  proto.pageservice.PageRequest,
  proto.pageservice.PageResponse,
  /**
   * @param {!proto.pageservice.PageRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pageservice.PageResponse.deserializeBinary
);


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pageservice.PageResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pageservice.PageResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pageservice.GrpcCmsServiceClient.prototype.getPage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pageservice.GrpcCmsService/getPage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_getPage,
      callback);
};


/**
 * @param {!proto.pageservice.PageRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pageservice.PageResponse>}
 *     Promise that resolves to the response
 */
proto.pageservice.GrpcCmsServicePromiseClient.prototype.getPage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pageservice.GrpcCmsService/getPage',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_getPage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pageservice.EmptyRequest,
 *   !proto.pageservice.AllPagesResponse>}
 */
const methodDescriptor_GrpcCmsService_getAllPages = new grpc.web.MethodDescriptor(
  '/pageservice.GrpcCmsService/getAllPages',
  grpc.web.MethodType.UNARY,
  proto.pageservice.EmptyRequest,
  proto.pageservice.AllPagesResponse,
  /**
   * @param {!proto.pageservice.EmptyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pageservice.AllPagesResponse.deserializeBinary
);


/**
 * @param {!proto.pageservice.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pageservice.AllPagesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pageservice.AllPagesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pageservice.GrpcCmsServiceClient.prototype.getAllPages =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pageservice.GrpcCmsService/getAllPages',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_getAllPages,
      callback);
};


/**
 * @param {!proto.pageservice.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pageservice.AllPagesResponse>}
 *     Promise that resolves to the response
 */
proto.pageservice.GrpcCmsServicePromiseClient.prototype.getAllPages =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pageservice.GrpcCmsService/getAllPages',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_getAllPages);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.pageservice.EmailRequest,
 *   !proto.pageservice.EmailResponse>}
 */
const methodDescriptor_GrpcCmsService_validateEmail = new grpc.web.MethodDescriptor(
  '/pageservice.GrpcCmsService/validateEmail',
  grpc.web.MethodType.UNARY,
  proto.pageservice.EmailRequest,
  proto.pageservice.EmailResponse,
  /**
   * @param {!proto.pageservice.EmailRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.pageservice.EmailResponse.deserializeBinary
);


/**
 * @param {!proto.pageservice.EmailRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.pageservice.EmailResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.pageservice.EmailResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.pageservice.GrpcCmsServiceClient.prototype.validateEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/pageservice.GrpcCmsService/validateEmail',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_validateEmail,
      callback);
};


/**
 * @param {!proto.pageservice.EmailRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.pageservice.EmailResponse>}
 *     Promise that resolves to the response
 */
proto.pageservice.GrpcCmsServicePromiseClient.prototype.validateEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/pageservice.GrpcCmsService/validateEmail',
      request,
      metadata || {},
      methodDescriptor_GrpcCmsService_validateEmail);
};


module.exports = proto.pageservice;

